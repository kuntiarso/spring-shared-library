name: Publish Shared Library Package as Maven Dependency to GitHub Packages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup java 21 temurin
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: temurin

      - name: Extract repo name and export as env var
        run: |
          REPOSITORY="${{ github.repository }}"
          REPOSITORY_NAME="${REPOSITORY##*/}"
          echo "PACKAGE_NAME=$REPOSITORY_NAME" >> $GITHUB_ENV

      - name: Delete existing shared-library package from GitHub Packages
        run: |
          echo "Fetching versions of the Maven package..."
          VERSION_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PACKAGE_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/users/${{ github.repository_owner }}/packages/maven/${{ env.PACKAGE_NAME }}/versions" \
            | jq '.[] | select(.name=="latest") | .id')
          
          if [ -n "$VERSION_ID" ]; then
            echo "Found existing 'latest' version with ID: $VERSION_ID. Deleting..."
            curl -X DELETE \
              -H "Authorization: Bearer ${{ secrets.GH_PACKAGE_PAT }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/users/${{ github.repository_owner }}/packages/maven/${{ env.PACKAGE_NAME }}/versions/$VERSION_ID"
            echo "Deleted previous 'latest' version."
          else
            echo "No existing 'latest' version found. Skipping deletion."
          fi

      - name: Build and publish package to GitHub Packages
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.repository_owner }}</username>
                <password>${{ secrets.GH_PACKAGE_PAT }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build and publish package to GitHub Packages
        run: mvn clean deploy -DskipTests