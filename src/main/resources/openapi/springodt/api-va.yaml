openapi: 3.0.3
info:
  title: Virtual Account API
  version: 1.0.0
paths: { }
components:
  schemas:
    VaRequest:
      type: object
      properties:
        clientId:
          type: string
          example: BRS-001-000
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "paymentId must not be null")
            @jakarta.validation.constraints.NotBlank(message = "paymentId must not be empty")
        requestId:
          type: string
          example: 12345
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "requestId must not be null")
            @jakarta.validation.constraints.NotBlank(message = "requestId must not be empty")
        token:
          type: string
          example: eyJhbGciOi
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "token must not be null")
            @jakarta.validation.constraints.NotBlank(message = "token must not be empty")
        tokenScheme:
          $ref: './type-token-scheme.yaml#/components/schemas/TokenScheme'
        paymentId:
          type: string
          example: 1
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "paymentId must not be null")
            @jakarta.validation.constraints.NotBlank(message = "paymentId must not be empty")
        partnerId:
          type: string
          example: 12345
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "partnerId must not be null")
            @jakarta.validation.constraints.NotBlank(message = "partnerId must not be empty")
        customerNo:
          type: string
          example: 0000054321
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "customerNo must not be null")
            @jakarta.validation.constraints.NotBlank(message = "customerNo must not be empty")
        vaNo:
          type: string
          example: 123450000054321
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "vaNo must not be null")
            @jakarta.validation.constraints.NotBlank(message = "vaNo must not be empty")
        vaName:
          type: string
          example: John Doe
          x-field-extra-annotation: |
            @jakarta.validation.constraints.NotNull(message = "vaName must not be null")
            @jakarta.validation.constraints.NotBlank(message = "vaName must not be empty")
        billedAmount:
          allOf:
            - $ref: './data-amount.yaml#/components/schemas/AmountData'
          x-field-extra-annotation: |
            @jakarta.validation.Valid
            @jakarta.validation.constraints.NotNull(message = "billedAmount must not be null")
        transactionType:
          $ref: './type-transaction.yaml#/components/schemas/TransactionType'
        additional:
          allOf:
            - $ref: './data-additional.yaml#/components/schemas/AdditionalData'
          x-field-extra-annotation: |
            @jakarta.validation.Valid
            @jakarta.validation.constraints.NotNull(message = "additional must not be null")
    VaResponse:
      type: object
      properties:
        paymentId:
          type: string
          example: 1
        partnerId:
          type: string
          example: 12345
        customerNo:
          type: string
          example: 0000054321
        vaNo:
          type: string
          example: 123450000054321
        billedAmount:
          $ref: './data-amount.yaml#/components/schemas/AmountData'
        additional:
          $ref: './data-additional.yaml#/components/schemas/AdditionalData'
        expiredDate:
          type: string
          format: instant
          example: "2025-08-21T10:55:00+07:00"